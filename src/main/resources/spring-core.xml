<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:annotation-config/>
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <!--<import resource="spring-mybatis.xml"/>-->
    <import resource="rabbitmq-content.xml"/>
    <import resource="spring-redis.xml"/>
    <import resource="spring-session.xml"/>
    <!-- 扫描包下面的所有的类是否受spring的管理，需要spring创建对象 -->
    <context:component-scan base-package="com.fqg.entity,com.fqg.service.*,com.fqg.dao,com.fqg.controller.*,com.fqg.cache"/>


    <bean name="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!---********************************************-->
    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
    <!--<property name="templateLoaderPath" value="ftl/" />-->
    <!--<property name="defaultEncoding" value="UTF-8" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; freemarker视图解析器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
    <!--<property name="viewClass"-->
    <!--value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />-->
    <!--<property name="suffix" value=".ftl" />-->
    <!--<property name="contentType" value="text/html;charset=UTF-8" />-->
    <!--<property name="exposeRequestAttributes" value="true" />-->
    <!--<property name="exposeSessionAttributes" value="true" />-->
    <!--<property name="exposeSpringMacroHelpers" value="true" />-->
    <!--&lt;!&ndash; 此变量值为pageContext.request, 页面使用方法：rc.contextPath &ndash;&gt;-->
    <!--<property name="requestContextAttribute" value="request" />-->
    <!--<property name="cache" value="true" />-->
    <!--<property name="order" value="0" />-->
    <!--</bean>-->

    <!--&lt;!&ndash;ViewResolver 视图解析器&ndash;&gt;-->
    <!--&lt;!&ndash;用于支持Servlet、JSP视图解析&ndash;&gt;-->
    <!--<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    <!--<property name="prefix" value="/WEB-INF/jsp/"/>-->
    <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->
    <!---*******************************************************->



    <!- 配置config.properties的文件路径 -->
    <context:property-placeholder location="classpath:config.properties" />

    <!-- 配置数据库和连接池信息，使用config.properties里面的值 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 数据连接信息 -->
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driverClassName}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!-- 初始化时获取三个连接（取值应在minPoolSize与maxPoolSize之间。默认值: 3） -->
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
        <!-- 连接池中保留的最小连接数，默认值：3 -->
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
        <!-- 连接池中保留的最大连接数，默认值：15 -->
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <!-- 当连接池中的连接数耗尽的时候，c3p0一次同时获取的连接数，默认值：3 -->
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
        <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${jdbc.maxStatements}"></property>
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
        <property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection}"></property>
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fqg.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 是过滤器代理类所代理的实体对象 -->
    <!-- name的取值必须要和web.xml中的filter的名称一致，因为过滤器代理是通过filter的名称查找spring容器中的代理对象-->
    <bean name="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--指定登录界面-->
        <property name="loginUrl" value="login_manager.html"/>

        <!--=============================================================================================-->
        <property name="filterChainDefinitions">
            <value>
                <!--anon不需要登录-->
                <!--/assets/**=anon-->
                <!--/html/**=anon-->
                <!--/index_manager.html=anon-->
                <!--/login_manager.html=anon-->
                <!--/user/login=anon-->
                <!--/css/**=anon-->
                <!--/css5/**=anon-->
                <!--/dist/**=anon-->
                <!--/images/**=anon-->
                <!--/js/**=anon-->
                <!--/vendor/**=anon-->
                <!--&lt;!&ndash;authc需要登录才能访问&ndash;&gt;-->
                <!--&lt;!&ndash;user配合rememberMe使用有效，authc不能配合rememberMe使用&ndash;&gt;-->
                <!--/**=user-->
            </value>
        </property>
        <!--=============================================================================================-->
    </bean>



    <bean name="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="authenticator" ref="myAuthenticator"/>-->
        <property name="realms">
            <list>
                <ref bean="userRealm"/>
                <!--<ref bean="merhcantRealm"/>-->
            </list>
        </property>
        <!--&lt;!&ndash;记住登录状态方便下次直接进入&ndash;&gt;-->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
    </bean>
    <bean id="userRealm" class="com.fqg.realm.UserRealm"/>


    <!--<bean name="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
    <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--与页面一致-->
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/> <!--避免XSS攻击-->
        <property name="maxAge" value="30000"/><!-- 失效时间 -->
    </bean>

    <!--<bean name="mybatisRealm" class="com.fqg.realm.MyBatisRealm"/>-->


</beans>