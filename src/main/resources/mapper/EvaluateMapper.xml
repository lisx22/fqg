<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fqg.dao.EvaluateMapper">
  <resultMap id="BaseResultMap" type="com.fqg.entity.Evaluate">
    <id column="evaluate_id" jdbcType="INTEGER" property="evaluateId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
    <result column="evaluate_content" jdbcType="VARCHAR" property="evaluateContent" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <association property="customerName" column="customer_id" select="com.fqg.dao.CustomerMapper.selectTrueNameById"></association>
  </resultMap>
  <sql id="Base_Column_List">
    evaluate_id, customer_id, commodity_id, evaluate_content, create_time ,star
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluate
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </select>

  <select id="selectByCommodityIdPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from evaluate
    where commodity_id = #{commodityId}
    limit #{startPage},#{pageSize}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluate
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fqg.entity.Evaluate">
    insert into evaluate (evaluate_id, customer_id, commodity_id, 
      evaluate_content, create_time,star)
    values (#{evaluateId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{commodityId,jdbcType=INTEGER}, 
      #{evaluateContent,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fqg.entity.Evaluate">
    insert into evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        evaluate_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="evaluateContent != null">
        evaluate_content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="star != null">
        star,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        #{evaluateId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="commodityId != null">
        #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="evaluateContent != null">
        #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fqg.entity.Evaluate">
    update evaluate
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="commodityId != null">
        commodity_id = #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="evaluateContent != null">
        evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
    </set>
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fqg.entity.Evaluate">
    update evaluate
    set customer_id = #{customerId,jdbcType=INTEGER},
      commodity_id = #{commodityId,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </update>
</mapper>