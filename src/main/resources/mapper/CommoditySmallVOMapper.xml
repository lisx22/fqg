<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fqg.dao.CommoditySmallVOMapper">
  <resultMap id="BaseResultMap" type="com.fqg.entity.CommoditySmallVO">
    <id column="commodity_id" jdbcType="INTEGER" property="id" />
    <result column="commodity_name" jdbcType="VARCHAR" property="name" />
    <result column="commodity_price" jdbcType="INTEGER" property="price" />
    <association property="imagePath" column="commodity_id" select="com.fqg.dao.CommodityInfoImageMapper.selectFirstImageByCommodity"></association>
  </resultMap>

  <sql id="Base_Column_List">
    commodity_id, commodity_name, commodity_price
  </sql>

  <!--<select id="selectByTypeOnePaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeTwoPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where two_type_id = #{typeTwoId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeThreePaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where three_type_id = #{typeThreeId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneAndBrandPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    and brand_id = #{brandId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeTwoAndBrandPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where two_type_id = #{typeTwoId}
    and brand_id = #{brandId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeThreeAndBrandPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where three_type_id = #{typeThreeId}
    and brand_id = #{brandId}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneAndPriceRangePaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    and commodity_price &gt; #{startPrice}
    and commodity_price &lt; #{endPrice}
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneOrderByPrice" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    order by commodity_price
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneOrderByPriceDesc" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    order by commodity_price desc
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneOrderBySellNum" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    order by sell_num
    limit #{startPage},#{pageSize}
  </select>

  <select id="selectByTypeOneOrderBySellNumDesc" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from commodity
    where one_type_id = #{typeOneId}
    order by sell_num desc
    limit #{startPage},#{pageSize}
  </select>

  <select id="countByTypeOne" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where one_type_id = #{typeOneId}
  </select>

  <select id="countByTypeTwo" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where two_type_id = #{typeTwoId}
  </select>

  <select id="countByTypeThree" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where three_type_id = #{typeThreeId}
  </select>

  <select id="countByTypeOneAndBrand" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where one_type_id = #{typeOneId}
    and brand_id = #{brandId}
  </select>

  <select id="countByTypeTwoAndBrand" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where two_type_id = #{typeTwoId}
    and brand_id = #{brandId}
  </select>

  <select id="countByTypeThreeAndBrand" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where three_type_id = #{typeThreeId}
    and brand_id = #{brandId}
  </select>

  <select id="countByTypeOneAndPriceRange" resultType="java.lang.Integer">
    select
    count(*)
    from commodity
    where one_type_id = #{typeOneId}
    and commodity_price &gt; #{startPrice}
    and commodity_price &lt; #{endPrice}
  </select>-->

  <select id="selectByDynamicSQL" parameterType="com.fqg.entity.CommoditySelect" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from commodity
      <where>
        <if test="typeOneId != null">
          one_type_id = #{typeOneId}
        </if>
        <if test="typeTwoId != null">
          two_type_id = #{typeTwoId}
        </if>
        <if test="typeThreeId != null">
          three_type_id = #{typeThreeId}
        </if>
        <if test="brandId != null">
          and brand_id = #{brandId}
        </if>
        <if test="startPrice != null">
          and commodity_price &gt; #{startPrice}
        </if>
        <if test="endPrice != null">
          and commodity_price &lt; #{endPrice}
        </if>
        <if test="orderByPrice == 1">
          order by commodity_price
        </if>
        <if test="orderByPrice == 2">
          order by commodity_price desc
        </if>
        <if test="orderBySellNum == 1">
          order by sell_num
        </if>
        <if test="orderBySellNum == 2">
          order by sell_num desc
        </if>
        limit #{startPage},#{pageSize}
      </where>
  </select>
  <select id="countByDynamicSQL" resultType="java.lang.Integer">
    select
    count(commodity_id)
    from commodity
    <where>
      <if test="typeOneId != null">
        one_type_id = #{typeOneId}
      </if>
      <if test="typeTwoId != null">
        two_type_id = #{typeTwoId}
      </if>
      <if test="typeThreeId != null">
        three_type_id = #{typeThreeId}
      </if>
      <if test="brandId != null">
        and brand_id = #{brandId}
      </if>
      <if test="startPrice != null">
        and commodity_price &gt; #{startPrice}
      </if>
      <if test="endPrice != null">
        and commodity_price &lt; #{endPrice}
      </if>
      limit #{startPage},#{pageSize}
    </where>
  </select>
</mapper>